# Test Dockerfile for running tests in CI/CD pipelines
FROM node:18-alpine AS test

# Accept build arguments for user/group IDs
ARG USER_ID=1000
ARG GROUP_ID=1000

# Accept git repository configuration
ARG GIT_REPO_URL=https://github.com/learnclaude/sivaDemo.git
ARG GIT_BRANCH=testing

# Install dependencies for testing including git
RUN apk add --no-cache \
    libc6-compat \
    chromium \
    firefox-esr \
    harfbuzz \
    nss \
    freetype \
    ttf-freefont \
    git \
    && rm -rf /var/cache/apk/*

# Set Puppeteer/Playwright to use installed Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 \
    PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

WORKDIR /app

# Clone the repository
RUN git clone ${GIT_REPO_URL} .

# Checkout the specified branch
RUN git checkout ${GIT_BRANCH}

# Install all dependencies including devDependencies
RUN npm ci

# Skip Playwright browser installation since we manually installed browsers

# Create test user with matching host IDs
RUN addgroup -g ${GROUP_ID} -S testgroup 2>/dev/null || addgroup -S testgroup && \
    adduser -u ${USER_ID} -S testuser -G testgroup 2>/dev/null || adduser -S testuser -G testgroup

# Create directories for test outputs and set ownership
RUN mkdir -p coverage test-results playwright-report && \
    chown -R testuser:testgroup /app

# Set test environment
ENV NODE_ENV=test
ENV CI=true

# Switch to test user
USER testuser

# Configure git to trust the app directory for the testuser
RUN git config --global --add safe.directory /app

# Default command pulls latest changes and runs all tests
CMD ["sh", "-c", "git pull origin ${GIT_BRANCH} && npm run test:all"]