version: '3.8'

services:
  nginx-test:
    image: nginx:alpine
    container_name: filename-generator-nginx-test
    hostname: nginx-test.local
    ports:
      - "18092:80"
    volumes:
      - ./nginx/test.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      test-network:
        ipv4_address: 10.101.0.10
    restart: unless-stopped
    labels:
      - "environment=testing"
      - "service=nginx"
      - "network.subnet=10.101.0.0/24"

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        NODE_ENV: test
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
        GIT_REPO_URL: ${GIT_REPO_URL:-https://github.com/learnclaude/sivaDemo.git}
        GIT_BRANCH: ${GIT_BRANCH:-testing}
    image: filename-generator:test
    container_name: filename-generator-test
    environment:
      NODE_ENV: test
      NEXT_PUBLIC_API_URL: http://nginx-test/api
      # All requests should go through nginx
      BASE_URL: http://nginx-test
      # Test-specific environment variables
      CI: true
      JEST_JUNIT_OUTPUT_DIR: ./test-results
      JEST_JUNIT_OUTPUT_NAME: junit.xml
    volumes:
      - ./coverage:/app/coverage
      - ./test-results:/app/test-results
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    command: sh -c "git config --global --add safe.directory /app && git pull origin $${GIT_BRANCH:-testing} && npm run test:ci"
    networks:
      - test-network

  e2e-test:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
        GIT_REPO_URL: ${GIT_REPO_URL:-https://github.com/learnclaude/sivaDemo.git}
        GIT_BRANCH: ${GIT_BRANCH:-testing}
    image: filename-generator:e2e-test
    container_name: filename-generator-e2e-test
    depends_on:
      nginx-test:
        condition: service_started
      app:
        condition: service_healthy
    environment:
      NODE_ENV: test
      NEXT_PUBLIC_API_URL: http://nginx-test/api
      # All requests go through nginx
      PLAYWRIGHT_BASE_URL: http://nginx-test
      BASE_URL: http://nginx-test
    command: sh -c "git config --global --add safe.directory /app && git pull origin $${GIT_BRANCH:-testing} && npm run test:e2e"
    networks:
      - test-network
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    volumes:
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: test
        NEXT_PUBLIC_API_URL: http://nginx-test/api
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    image: filename-generator:test-app
    container_name: filename-generator-test-app
    hostname: app-test.local
    # No external ports - only accessible via nginx
    expose:
      - "3000"
    environment:
      NODE_ENV: test
      PORT: 3000
      ENVIRONMENT: testing
      HOSTNAME: app-test.local
    networks:
      test-network:
        ipv4_address: 10.101.0.20
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s
    labels:
      - "environment=testing"
      - "service=app"
      - "network.subnet=10.101.0.0/24"

networks:
  test-network:
    name: filename-generator-test-network
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: 10.101.0.0/24
          gateway: 10.101.0.1
    driver_opts:
      com.docker.network.bridge.name: test-bridge
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
    labels:
      - "environment=testing"
      - "purpose=isolation"
      - "subnet=10.101.0.0/24"