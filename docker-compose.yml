version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: filename-generator-nginx-dev
    hostname: nginx-dev.local
    ports:
      - "18091:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      dev-network:
        ipv4_address: 10.100.0.10
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "environment=development"
      - "service=nginx"
      - "network.subnet=10.100.0.0/24"

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:18091/api}
        NODE_ENV: production
    container_name: filename-generator-app-dev
    hostname: app-dev.local
    # Only expose port internally - no external port mapping
    expose:
      - "3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      ENVIRONMENT: development
      HOSTNAME: app-dev.local
    networks:
      dev-network:
        ipv4_address: 10.100.0.20
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    labels:
      - "environment=development"
      - "service=app"
      - "network.subnet=10.100.0.0/24"

  redis:
    image: redis:7-alpine
    container_name: filename-generator-redis-dev
    hostname: redis-dev.local
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    expose:
      - "6379"
    networks:
      dev-network:
        ipv4_address: 10.100.0.30
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "environment=development"
      - "service=redis"
      - "network.subnet=10.100.0.0/24"

networks:
  dev-network:
    name: filename-generator-dev-network
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: 10.100.0.0/24
          gateway: 10.100.0.1
    driver_opts:
      com.docker.network.bridge.name: dev-bridge
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
    labels:
      - "environment=development"
      - "purpose=isolation"
      - "subnet=10.100.0.0/24"