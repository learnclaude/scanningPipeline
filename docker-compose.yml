version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: ${NGINX_CONTAINER:-filename-generator-nginx-dev}
    hostname: ${NGINX_HOSTNAME:-nginx-dev.local}
    ports:
      - "${NGINX_PORT:-18090}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      dev-network:
        ipv4_address: ${NGINX_IP:-10.100.0.10}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "environment=development"
      - "service=nginx"
      - "network.subnet=10.100.0.0/24"

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:18090/api}
        NODE_ENV: production
    container_name: ${APP_CONTAINER:-filename-generator-app-dev}
    hostname: ${APP_HOSTNAME:-app-dev.local}
    # Only expose port internally - no external port mapping
    expose:
      - "${APP_INTERNAL_PORT:-3000}"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${APP_INTERNAL_PORT:-3000}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      HOSTNAME: ${APP_HOSTNAME:-app-dev.local}
    networks:
      dev-network:
        ipv4_address: ${APP_IP:-10.100.0.20}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${APP_IP:-10.100.0.20}:${APP_INTERNAL_PORT:-3000}/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    labels:
      - "environment=development"
      - "service=app"
      - "network.subnet=10.100.0.0/24"

  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER:-filename-generator-redis-dev}
    hostname: ${REDIS_HOSTNAME:-redis-dev.local}
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    expose:
      - "${REDIS_INTERNAL_PORT:-6379}"
    networks:
      dev-network:
        ipv4_address: ${REDIS_IP:-10.100.0.30}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "environment=development"
      - "service=redis"
      - "network.subnet=10.100.0.0/24"

networks:
  dev-network:
    name: ${NETWORK_NAME:-filename-generator-dev-network}
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET_PREFIX:-10.100.0}.0/24
          gateway: ${GATEWAY_IP:-10.100.0.1}
    driver_opts:
      com.docker.network.bridge.name: ${BRIDGE_NAME:-dev-bridge}
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
    labels:
      - "environment=${ENVIRONMENT:-development}"
      - "purpose=isolation"
      - "subnet=${SUBNET_PREFIX:-10.100.0}.0/24"